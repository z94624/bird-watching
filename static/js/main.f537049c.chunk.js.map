{"version":3,"sources":["reportWebVitals.js","images/logo.png","components/Header.js","Layout.js","components/Footer.js","views/Home.js","utils/ebird-ebirders.js","images/avatar1_half.JPG","images/avatar2_half.JPG","utils/ebMetadata_dataExtraction.js","hooks/useGeoLocation.js","components/FullScreenButton.js","images/marker-icon.png","images/ebirder.png","views/EBirdChartsMap.js","utils/tools.js","images/timeline-icon.png","images/point/point1.png","images/point/point2.png","images/point/point3.png","views/EBirdChartsTimeline.js","views/EBirdChartsChart.js","views/EBirdCharts.js","components/ScrollTopArrow.js","views/EBird.js","utils/ebEbirders_dataExtraction.js","components/YoutubeVideo.js","utils/ytVideos_dataExtraction.js","views/YouTube.js","views/Photos.js","views/Records.js","views/About.js","router.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","navList","to","text","Header","useState","navCollapsed","setNavCollapsed","browseHistory","useHistory","useEffect","listen","location","className","src","LogoIcon","alt","width","height","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","onClick","xmlns","fill","viewBox","d","id","map","idx","exact","activeClassName","aria-current","Layout","children","Footer","Home","infos","loadEBirdMetadataOfEBirder","avatarIndex","eBirdMetadataData_smoBEE","eBirdMetadataData_LinFenWen","dataMergedByKeys","keysToMerge","keysToCollect","keysToRemain","sort","descendingOrder","allKeys","eBirdMetadataData","mergedData","reduce","arr","ele","exist","findIndex","okEle","match","keyToMerge","JSON","stringify","matchedEle","keyToCollect","includes","Date","getTime","newEle","allKey","push","a","b","useGeoLocation","loaded","coordinates","lat","lng","setLocation","onSuccess","position","coords","latitude","longitude","onError","error","navigator","code","message","geolocation","getCurrentPosition","FullScreenButton","fullscreenHandler","enter","markerIcon","L","Icon","iconUrl","markerImg","iconSize","iconAnchor","popupAnchor","ebirderIcon","ebirderImg","EBirdChartsMap","useFullScreenHandle","ebirderLocation","markerData","aria-labelledby","handle","MapContainer","center","zoom","style","TileLayer","attribution","url","detectRetina","Marker","icon","title","opacity","riseOnHover","spiderLegPolylineOptions","weight","color","mIdx","Submission_ID","Location","Time","Common_Name","Count","Latitude","Longitude","locationShort","split","datetime","birds","name","nIdx","join","Popup","maxWidth","maxHeight","closeButton","placeholder","value","disabled","htmlFor","arrayToChunks","size","chunkedArray","length","splice","getRandomColor","alpha","Math","floor","random","EBirdChartsTimeline","cardData","modalShow","modalInfo","setModalInfo","modalTitle","modalBody","cIdx","Number_of_Observers","Breeding_Code","Observation_Details","contentStyle","background","date","iconStyle","timelineImg","point1","point2","point3","role","names","counts","borderColors","pieData","labels","datasets","label","data","backgroundColor","replace","borderColor","borderWidth","plugins","ChartDataLabels","options","legend","display","datalabels","formatter","context","chart","dataIndex","handleModalInfoChange","Modal","show","onHide","centered","fullscreen","scrollable","contentClassName","closeVariant","Title","Body","EBirdChartsChart","chartData","locations","nonDupLocations","Set","liferRawData","obj","newBS","oldBS","diffBirdSpecies","filter","nbs","liferData","yAxisID","succLocation","setSuccLocation","succLocationNum","succLocationIdx","succRawData","eleNames","eleCounts","i","eleName","eleCount","objCounts","Array","succBirds","Object","keys","succData","entries","dataset","scales","yAxes","onChange","document","getElementById","lIdx","EBirdCharts","selectedTab","setSelectedTab","activeTabName","fullWidth","variant","onSelect","e","tabName","handleSelectedTabChange","ariaControls","memo","ScrollTopArrow","showScroll","scrollToElement","EBird","drawerOpen","setDrawerOpen","storageAvatar","parseInt","localStorage","getItem","setAvatarIndex","avatars","handleAvatarIndexChange","info","iIdx","toString","round","padding","eBirderInfosToRainbowAvatars","index","setItem","eBirderInfo","setShowScroll","onScroll","target","scrollTop","footer","header","hideCloseButton","isOpen","slideFrom","onRequestClose","classNames","YoutubeVideo","videoId","videoLid","handleVideoPlay","handleVideoStop","showVideo","setShowVideo","opts","playerVars","autoplay","controls","list","undefined","listType","onPlay","onPause","onEnd","React","createElement","backgroundImage","getItems","key","duplicate","chunk","items","youTubeVideosData","concat","itemsToRainbowMultiSelectOptions","labelAlignment","hideLabel","isLoading","chipVariant","showCheckbox","item","vidsToVideoCards","vids","dates","childClassName","delay","transitionDuration","wrapperTag","childTag","visible","vid","vIdx","bird","userParameters","userDates","userLocations","userBirds","multiSelectOutputToValues","multiSelectOutput","playingVideos","indexOf","YouTube","handleUserChange","filterVids","filterDates","filterLocations","filterBirds","fullVids","fullVid","fullDate","fullDates","fullLocation","fullLocations","fullBird","fullBirds","fullDateTime","booleanDate","booleanLocation","booleanBird","filterVideoCards","setVideoCards","dateRange","setDateRange","handleDateRangeChange","userDateArray","datePickerOutput","localeDateStrings","toLocaleDateString","year","month","padStart","day","setLocations","listLocations","locationMultiSelect","userLocationObjects","setBirds","listBirds","birdMultiSelect","userBirdObjects","fullVideos","videoCards","latestDateYMD","latestYear","latestMonth","latestDay","pauseVideo","pauseVideos","formatStyle","isCentered","locale","maxDate","minDate","selectionType","Photos","Records","About","RootRouter","scrollIntoView","behavior","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f537049c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.4fc1974f.png\";","import { useState, useEffect } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\nimport LogoIcon from './../images/logo.png';\r\n// 各分頁的名稱與路徑\r\nconst navList = [\r\n    // 呈現 eBird 輸出的 MetaData\r\n\t{to: \"/bird-watching/ebird\", text: \"eBird\"},\r\n    // 展示 smoBEE Universe 的\"賞鳥紀錄\"播放清單所有影片\r\n\t{to: \"/bird-watching/youtube\", text: \"YouTube\"},\r\n    // Google Drive 中的鳥照\r\n\t{to: \"/bird-watching/photos\", text: \"Photos\"},\r\n    // Google Drive 中的鳥音\r\n\t{to: \"/bird-watching/records\", text: \"Records\"},\r\n    // 關於我\r\n    {to: \"/bird-watching/about\", text: \"About\"}\r\n];\r\n\r\nconst Header = () => {\r\n\t// 分頁列表選單的開合狀態\r\n\tconst [navCollapsed, setNavCollapsed] = useState(true);\r\n    // 偵測分頁轉換\r\n    const browseHistory = useHistory(); // 轉換路徑歷史\r\n    useEffect(() => {\r\n        // 若打開分頁列切換頁面後，立即收合分頁列\r\n        return browseHistory.listen(location => {\r\n            setNavCollapsed(true);\r\n        });\r\n    }, [browseHistory]);\r\n\r\n\treturn (\r\n\t\t<header className=\"ps-3\">\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    {/* 網頁品牌 */}\r\n                    <NavLink className=\"navbar-brand float-md-start\" to=\"/bird-watching\">\r\n                        <img src={LogoIcon} alt=\"島羽\" width=\"50\" height=\"auto\" /> {/* 品牌圖示 */}\r\n                        <span className=\"ms-2\">楓楓與小芬的島羽</span> {/* 品牌名稱 */}\r\n                    </NavLink>\r\n                    {/* 分頁列表的展開按鈕 */}\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarTabs\"\r\n                        aria-controls=\"navbarTabs\"\r\n                        aria-expanded={navCollapsed ? false : true}\r\n                        aria-label=\"Toggle navigation\"\r\n                        onClick={() => setNavCollapsed(!navCollapsed)}\r\n                        //onMouseEnter={() => setNavCollapsed(false)}\r\n                    >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\r\n                        </svg>\r\n                    </button>\r\n                    {/* 分頁列表 */}\r\n                    <div\r\n                        className={`navbar-collapse${navCollapsed ? ' collapse' : '  collapse show'}`}\r\n                        id=\"navbarTabs\"\r\n                        //onMouseLeave={() => setNavCollapsed(true)}\r\n                    >\r\n                        <ul className=\"navbar-nav\">\r\n                        \t{navList.map(({to, text}, idx) => (\r\n                        \t\t<li key={\"navItem-\"+idx} className=\"nav-item\">\r\n                        \t\t\t<NavLink\r\n                        \t\t\t\texact\r\n                        \t\t\t\tclassName=\"nav-link\"\r\n                        \t\t\t\tactiveClassName=\"nav-link active\"\r\n                                        aria-current=\"page\"\r\n                        \t\t\t\tto={to} // 分頁路徑\r\n                        \t\t\t>\r\n                        \t\t\t\t{text} {/* 分頁名稱 */}\r\n                        \t\t\t</NavLink>\r\n                        \t\t</li>\r\n                    \t\t))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import { Fragment } from 'react';\r\n\r\nimport Header from './components/Header';\r\n\r\nconst Layout = ({children}) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"h-100 bg-dark text-center\">\r\n            \t<div className=\"cover-container d-flex h-100 p-0 flex-column\">\r\n\t\t\t\t\t<Header className=\"fixed-top\" /> {/* 每個分頁都要有途徑轉換至其他分頁 */}\r\n\t\t\t\t\t{children} {/* 每個分頁的頁面 */}\r\n\t\t\t\t</div>\r\n        \t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default Layout;\r\n","const Footer = () => {\r\n\treturn (\r\n\t\t<footer className=\"pt-3 text-white-50\">\r\n            <p>Copyright © 2021 - 2022 By 芬峯拉泡樂</p>\r\n        </footer>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n","import { NavLink } from 'react-router-dom';\n\nimport Footer from './../components/Footer';\nimport './Home.css';\n\nconst Home = () => {\n    return (\n        <main>\n            <div className=\"main-home d-flex align-items-center justify-content-center\">\n                <NavLink to=\"/bird-watching/youtube\" className=\"btn btn-lg fw-bold btn-outline-light\">進入羽宙</NavLink>\n            </div>\n\n            <Footer />\n        </main>\n    );\n}\n\nexport default Home;\n","import avatar1 from './../images/avatar1_half.JPG';\r\nimport avatar2 from './../images/avatar2_half.JPG';\r\n// eBirders 個人頁面所有個資\r\nexport const infos = [\r\n\t{\r\n\t\t\"name\": \"黃健峯\",\r\n\t\t\"country\": \"Taiwan\",\r\n\t\t\"signUp\": \"2020/09/29\",\r\n\t\t\"firstRecord\": \"2020/08/29\",\r\n\t\t\"firstMedia\": \"2021/02/06\",\r\n\t\t\"url\": \"https://ebird.org/profile/MTg1MTc2NQ\",\r\n\t\t\"speciesRecorded\": 153,\r\n\t\t\"listsRecorded\": 217,\r\n\t\t\"speciesImaged\": 103,\r\n\t\t\"speciesTaped\": 0,\r\n\t\t\"avatar\": avatar1\r\n\t},\r\n\t{\r\n\t\t\"name\": \"林芬雯\",\r\n\t\t\"country\": \"Taiwan\",\r\n\t\t\"signUp\": \"2019/10/24\",\r\n\t\t\"firstRecord\": \"2019/10/17\",\r\n\t\t\"firstMedia\": \"2021/01/24\",\r\n\t\t\"url\": \"https://ebird.org/profile/MTQ1NjU5OQ\",\r\n\t\t\"speciesRecorded\": 183,\r\n\t\t\"listsRecorded\": 206,\r\n\t\t\"speciesImaged\": 4,\r\n\t\t\"speciesTaped\": 0,\r\n\t\t\"avatar\": avatar2\r\n\t}\r\n];\r\n","export default __webpack_public_path__ + \"static/media/avatar1_half.a80f1f9e.JPG\";","export default __webpack_public_path__ + \"static/media/avatar2_half.f87680b8.JPG\";","import eBirdMetadataData_smoBEE from './ebird-metadata_smoBEE.json';\r\nimport eBirdMetadataData_LinFenWen from './ebird-metadata_lin-fen-wen.json';\r\n/*\r\n * 讀取 ebirder 資料\r\n * avatarIndex: ebirder 編號\r\n */\r\nconst loadEBirdMetadataOfEBirder = avatarIndex => {\r\n\tswitch (avatarIndex) {\r\n\t\tcase 0:\r\n\t\t\treturn eBirdMetadataData_smoBEE;\r\n\t\tcase 1:\r\n\t\t\treturn eBirdMetadataData_LinFenWen;\r\n\t\tdefault:\r\n\t\t\treturn eBirdMetadataData_smoBEE;\r\n\t}\r\n}\r\n/*\r\n * 依照欲合併欄位合併賞鳥資料\r\n * keysToMerge: 依據欄位\r\n * keysToCollect: 合併欄位\r\n * keysToRemain: 保留欄位\r\n */\r\nexport const dataMergedByKeys = (avatarIndex, keysToMerge, keysToCollect, keysToRemain, sort, descendingOrder=true) => {\r\n\t// 所有欄位\r\n\tlet allKeys = [...keysToMerge, ...keysToCollect, ...keysToRemain];\r\n\t// 使用 ebirder 資料\r\n\tlet eBirdMetadataData = loadEBirdMetadataOfEBirder(avatarIndex);\r\n\tlet mergedData = eBirdMetadataData.reduce((arr, ele) => { // EXCEL 的每列資料\r\n\t\tlet exist = arr.findIndex(okEle => { // 是否有相同依據欄位資料\r\n\t\t\tlet match = true;\r\n\t\t\tfor (let keyToMerge of keysToMerge) { // 每個依據欄位都要相同\r\n\t\t\t\tif (JSON.stringify(ele[keyToMerge]) !== JSON.stringify(okEle[keyToMerge])) {\r\n\t\t\t\t\tmatch = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn match;\r\n\t\t});\r\n\r\n\t\tif (exist !== -1) { // 若存在即合併\r\n\t\t\tlet matchedEle = arr[exist];\r\n\t\t\tfor (let keyToCollect of keysToCollect) { // 每個合併欄位\r\n\t\t\t\tmatchedEle[keyToCollect] = [...matchedEle[keyToCollect], ...ele[keyToCollect]];\r\n\t\t\t}\r\n\t\t\tif (sort && allKeys.includes(\"Date\")) { // 為了依日期時間排序\r\n\t\t\t\tmatchedEle[\"datetime\"] = [`${ele[\"Date\"]} ${ele[\"Time\"]}`];\r\n\t\t\t\tmatchedEle[\"milliTime\"] = [new Date(`${ele[\"Date\"]} ${ele[\"Time\"]}`).getTime()];\r\n\t\t\t}\r\n\t\t} else { // 若不存在即新增\r\n\t\t\tlet newEle = {};\r\n\t\t\tfor (let allKey of allKeys) { // 只保留需要的欄位\r\n\t\t\t\tnewEle[allKey] = ele[allKey];\r\n\t\t\t}\r\n\t\t\tif (sort && allKeys.includes(\"Date\")) { // 為了依日期時間排序\r\n\t\t\t\tnewEle[\"datetime\"] = [`${ele[\"Date\"]} ${ele[\"Time\"]}`];\r\n\t\t\t\tnewEle[\"milliTime\"] = [new Date(`${ele[\"Date\"]} ${ele[\"Time\"]}`).getTime()];\r\n\t\t\t}\r\n\t\t\tarr.push(newEle);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}, []);\r\n\t// 若要依日期時間排序\r\n\tif (sort) {\r\n\t\tif (descendingOrder) { // 降冪\r\n\t\t\tmergedData.sort((a, b) => a[\"milliTime\"][0] < b[\"milliTime\"][0] ? 1 : -1);\r\n\t\t} else { // 升冪\r\n\t\t\tmergedData.sort((a, b) => a[\"milliTime\"][0] > b[\"milliTime\"][0] ? 1 : -1);\r\n\t\t}\r\n\t}\r\n\treturn mergedData;\r\n}","import { useState, useEffect } from 'react';\r\n\r\nconst useGeoLocation = () => {\r\n\t// 使用者座標資訊\r\n\tconst [location, setLocation] = useState({\r\n\t\tloaded: false, // 處理狀態\r\n\t\tcoordinates: {lat: \"\", lng: \"\"} // 座標\r\n\t});\r\n\t// 成功\r\n\tconst onSuccess = position => {\r\n\t\tsetLocation({ // 促使 EBirdChartsMap.js 轉譯第二次\r\n\t\t\tloaded: true,\r\n\t\t\tcoordinates: {\r\n\t\t\t\tlat: position.coords.latitude,\r\n\t\t\t\tlng: position.coords.longitude\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t// 失敗\r\n\tconst onError = error => {\r\n\t\tsetLocation({\r\n\t\t\tloaded: true,\r\n\t\t\terror\r\n\t\t});\r\n\t}\r\n\t// 等待 EBirdChartsMap.js 轉譯第一次後再執行\r\n\tuseEffect(() => {\r\n\t\t// 偵測允不允許存取位置\r\n\t\tif (!(\"geolocation\" in navigator)) {\r\n\t\t\tonError({\r\n\t\t\t\tcode: 0,\r\n\t\t\t\tmessage: \"Geolocation not supported\"\r\n\t\t\t});\r\n\t\t}\r\n\t\t// 允許的話，嘗試取得位置\r\n\t\tnavigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n\t}, []);\r\n\r\n\treturn location;\r\n}\r\n\r\nexport default useGeoLocation;\r\n","import './FullScreenButton.css';\r\n\r\nconst FullScreenButton = ({fullscreenHandler}) => {\r\n\treturn (\r\n\t\t<button type=\"button\" className=\"fullscreenBtn btn-light rounded\" onClick={fullscreenHandler.enter}>\r\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-fullscreen\" viewBox=\"0 0 16 16\">\r\n\t\t\t\t<path d=\"M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z\"/>\r\n\t\t\t</svg>\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default FullScreenButton;","export default __webpack_public_path__ + \"static/media/marker-icon.16762ddc.png\";","export default __webpack_public_path__ + \"static/media/ebirder.53c42286.png\";","// FIX: https://stackoverflow.com/questions/67552020/how-to-fix-error-failed-to-compile-node-modules-react-leaflet-core-esm-pat\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\r\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\r\n\r\nimport { dataMergedByKeys } from './../utils/ebMetadata_dataExtraction';\r\nimport useGeoLocation from './../hooks/useGeoLocation';\r\nimport FullScreenButton from './../components/FullScreenButton';\r\nimport './css/birdLoader.css';\r\n// 地圖圖釘\r\nimport markerImg from './../images/marker-icon.png';\r\n//import markerShadowImg from './../images/leaflet/marker-shadow.png';\r\n// eBirder 圖示\r\nimport ebirderImg from './../images/ebirder.png';\r\n// 地圖圖釘圖片轉換成 Leaflet 格式\r\nconst markerIcon = new L.Icon({\r\n\ticonUrl: markerImg, // 圖釘\r\n\t//shadowUrl: markerShadowImg, // 陰影\r\n\ticonSize:     [36, 45], // size of the icon\r\n    //shadowSize:   [45, 45], // size of the shadow\r\n    iconAnchor:   [18, 45], // point of the icon which will correspond to marker's location\r\n    //shadowAnchor: [15, 45],  // the same for the shadow\r\n    popupAnchor:  [1, -34] // point from which the popup should open relative to the iconAnchor\r\n});\r\n// 使用者在地圖上顯示\r\nconst ebirderIcon = new L.Icon({\r\n\ticonUrl: ebirderImg,\r\n\ticonSize:     [68, 50],\r\n    iconAnchor:   [34, 50]\r\n});\r\n\r\nconst EBirdChartsMap = ({ avatarIndex }) => {\r\n\t// 全螢幕處理器\r\n\tconst fullscreenHandler = useFullScreenHandle();\r\n\t// 使用者座標\r\n\tconst location = useGeoLocation();\r\n\tconst loaded = location.loaded;\r\n\tconst ebirderLocation = [location.coordinates.lat, location.coordinates.lng];\r\n\t// 圖釘需要的資料\r\n\tlet markerData = dataMergedByKeys(avatarIndex, [\"Submission_ID\"], [\"Common_Name\", \"Count\"], [\"Location\", \"Date\", \"Time\", \"Latitude\", \"Longitude\"], false);\r\n\r\n\treturn (\r\n\t\t<div id=\"mapTab\" aria-labelledby=\"map\">\r\n\t\t\t{/* 全螢幕按鈕 */}\r\n\t\t\t<FullScreenButton fullscreenHandler={fullscreenHandler} />\r\n\t\t\t{/* 地圖容器 */}\r\n\t\t\t<div id=\"birdMap\">\r\n\t\t\t{loaded ?\r\n\t\t\t\t<FullScreen handle={fullscreenHandler}>\r\n\t\t\t\t\t<MapContainer\r\n\t\t\t\t\t\tcenter={ebirderLocation} // 地圖預設中心\r\n\t\t\t\t\t\tzoom={10} // 放大倍率\r\n\t\t\t\t\t\tstyle={{width: '100%', height: '100%'}} // 必設，預設高度 0\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* Used to load and display tile layers on the map. */}\r\n\t\t\t\t\t\t<TileLayer\r\n\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://ebird.org/profile/MTg1MTc2NQ\">黃健峯</a>/<a href=\"https://ebird.org/profile/MTQ1NjU5OQ/TW\">林芬雯</a> contributor' // 版權\r\n\t\t\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n\t\t\t\t\t\t\tdetectRetina={true}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{/* 標示使用者座標 */}\r\n\t\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\t\tposition={ebirderLocation}\r\n\t\t\t\t\t\t\t\ticon={ebirderIcon}\r\n\t\t\t\t\t\t\t\ttitle=\"我\"\r\n\t\t\t\t\t\t\t\talt=\"🐥\"\r\n\t\t\t\t\t\t\t\topacity={1}\r\n\t\t\t\t\t\t\t\triseOnHover={true}\r\n\t\t\t\t\t\t\t></Marker>\r\n\t\t\t\t\t\t{/*\r\n\t\t\t\t\t\t  * 圖釘群組：相鄰或重複的壓縮而不重疊\r\n\t\t\t\t\t\t  * 少(綠)/中(黃)/多(紅)：10 ~ 100\r\n\t\t\t\t\t\t  */}\r\n\t\t\t\t\t\t<MarkerClusterGroup\r\n\t\t\t\t\t\t\tkey={avatarIndex} // The cluster to be completely rerendered = clear all old markers.\r\n\t\t\t\t\t\t\tspiderLegPolylineOptions={{\r\n\t\t\t\t\t\t\t\tweight: 1.5,\r\n\t\t\t\t\t\t\t\tcolor: '#ab0047',\r\n\t\t\t\t\t\t\t\topacity: 0.7\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* 圖釘 */}\r\n\t\t\t\t\t\t{markerData.map(({Submission_ID, Location, Date, Time, Common_Name, Count, Latitude, Longitude}, mIdx) => {\r\n\t\t\t\t\t\t\tlet location = Location[0];\r\n\t\t\t\t\t\t\tlet locationShort = location.split(\"(\")[0];\r\n\t\t\t\t\t\t\tlet datetime = `${Date[0]} ${Time[0]}`;\r\n\t\t\t\t\t\t\tlet position = [Latitude[0], Longitude[0]];\r\n\t\t\t\t\t\t\tlet birds = Common_Name.map((name, nIdx) => [name, Count[nIdx]]).join(`\\n`);\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\t\t\tkey={`ebMarker-${mIdx}`}\r\n\t\t\t\t\t\t\t\t\tposition={position} // 座標\r\n\t\t\t\t\t\t\t\t\ticon={markerIcon} // 圖示\r\n\t\t\t\t\t\t\t\t\ttitle={locationShort} // Tooltip\r\n\t\t\t\t\t\t\t\t\talt=\"🐥\" // 圖示替代文字\r\n\t\t\t\t\t\t\t\t\topacity={0.9} // 圖釘透明度\r\n\t\t\t\t\t\t\t\t\triseOnHover={true} // 浮出至最前\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{/* 彈出說明 */}\r\n\t\t\t\t\t\t\t\t\t<Popup\r\n\t\t\t\t\t\t\t\t\t\tmaxWidth={200} // 固定寬度\r\n\t\t\t\t\t\t\t\t\t\tmaxHeight={300} // 最大高度，超過則 Scrollable\r\n\t\t\t\t\t\t\t\t\t\tcloseButton={false} // 打叉叉關閉\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{/* 地點 */}\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-5 fw-bold text-decoration-underline my-0\">{location}</p>\r\n\t\t\t\t\t\t\t\t\t\t{/* 時間 */}\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-6 my-1\">{datetime}</p>\r\n\t\t\t\t\t\t\t\t\t\t{/* 鳥種 */}\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-floating\">\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea id={Submission_ID} className=\"form-control\" placeholder=\"無鳥種\" value={birds} style={{height: \"135px\"}} disabled></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor={Submission_ID}>鳥種</label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Popup>\r\n\t\t\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</MarkerClusterGroup>\r\n\t\t\t\t\t</MapContainer>\r\n\t\t\t\t</FullScreen>\r\n\t\t\t:\r\n\t\t\t\t<div className=\"text-white d-flex flex-column justify-content-center align-items-center h-100 fs-1\">\r\n\t\t\t\t\t<div className=\"bird-loader\">\r\n\t\t\t\t\t\t<div className=\"bird-head\"></div>\r\n\t\t\t\t\t\t<div className=\"bird-face\"></div>\r\n\t\t\t\t\t\t<div className=\"bird-eye\"></div>\r\n\t\t\t\t\t\t<div className=\"bird-cheek\"></div>\r\n\t\t\t\t\t\t<div className=\"bird-upper-mouth\"></div>\r\n\t\t\t\t\t\t<div className=\"bird-lower-mouth\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span>等待定位中...</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default EBirdChartsMap;\r\n","/*\r\n * 陣列元素分組\r\n * arr: 一階陣列\r\n * size: 每組元素個數\r\n * 輸出：二階陣列\r\n */\r\nexport const arrayToChunks = (arr, size) => {\r\n\tvar chunkedArray = [];\r\n\twhile (arr.length) {\r\n\t\tchunkedArray.push(arr.splice(0, size));\r\n\t}\r\n\treturn chunkedArray;\r\n}\r\n/*\r\n * 隨機顏色\r\n * alpha: 透明度\r\n */\r\nexport const getRandomColor = (alpha=1) => {\r\n    return \"rgba(\" + Math.floor(Math.random() * 255) + \",\" + Math.floor(Math.random() * 255) + \",\" + Math.floor(Math.random() * 255) + \",\" + alpha + \")\";\r\n };","export default __webpack_public_path__ + \"static/media/timeline-icon.5b0ecd5b.png\";","export default __webpack_public_path__ + \"static/media/point1.e4e00c55.png\";","export default __webpack_public_path__ + \"static/media/point2.c2efd565.png\";","export default __webpack_public_path__ + \"static/media/point3.2432f373.png\";","import { useState } from 'react';\r\n\r\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport { dataMergedByKeys } from './../utils/ebMetadata_dataExtraction';\r\nimport { getRandomColor } from './../utils/tools';\r\n// 時間軸節點圖示\r\nimport timelineImg from './../images/timeline-icon.png';\r\n// 第 ? 點\r\nimport point1 from './../images/point/point1.png';\r\nimport point2 from './../images/point/point2.png';\r\nimport point3 from './../images/point/point3.png';\r\n\r\nconst EBirdChartsTimeline = ({ avatarIndex }) => {\r\n\t// 資訊卡需要的資料\r\n\tlet cardData = dataMergedByKeys(avatarIndex, [\"Submission_ID\"], [\"Common_Name\", \"Count\"], [\"Location\", \"Date\", \"Time\", \"Number_of_Observers\", \"Breeding_Code\", \"Observation_Details\"], true);\r\n\t// 鳥種圓餅圖 Modal\r\n\tconst [modalInfo, setModalInfo] = useState({modalShow: false});\r\n\tconst {modalShow, modalTitle, modalBody} = modalInfo; // Modal 狀態與內容\r\n\tconst handleModalClose = () => setModalInfo({ // Modal 關閉\r\n\t\t...modalInfo,\r\n\t\tmodalShow: false\r\n\t});\r\n\tconst handleModalInfoChange = (location, names, counts) => { // 變更 Modal 內容\r\n\t\tlet borderColors = names.reduce((arr) => {\r\n\t\t\treturn [...arr, getRandomColor()];\r\n\t\t}, []);\r\n\t\tlet backgroundColors = borderColors.reduce((arr, ele) => {\r\n\t\t\treturn [...arr, ele.replace(\",1)\", \",.2)\")];\r\n\t\t}, []);\r\n\t\t// 圓餅圖資料\r\n\t\tconst pieData = {\r\n\t\t\tlabels: names,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"鳥種圓餅圖\",\r\n\t\t\t\t\tdata: counts,\r\n\t\t\t\t\tbackgroundColor: backgroundColors,\r\n\t\t\t\t\tborderColor: borderColors,\r\n\t\t\t\t\tborderWidth: 2\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t\tconst pieOptions = {\r\n\t\t\tplugins: {\r\n\t\t\t\tlegend: { // 圖例\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t},\r\n\t\t\t\tdatalabels: { // 區塊名稱\r\n\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\tformatter: (value, context) => {\r\n\t\t\t\t\t\treturn `${context.chart.data.labels[context.dataIndex]}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 更換成該筆觀察資料\r\n\t\tsetModalInfo({\r\n\t\t\t...modalInfo,\r\n\t\t\tmodalShow: true,\r\n\t\t\tmodalTitle: location,\r\n\t\t\tmodalBody: <Pie data={pieData} plugins={[ChartDataLabels]} options={pieOptions} />\r\n\t\t})\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div id=\"timelineTab\" aria-labelledby=\"timeline\">\r\n\t\t\t{/* 時間線 */}\r\n\t\t\t<VerticalTimeline>\r\n\t\t\t{/* 資訊卡 */}\r\n\t\t\t{cardData.map(({Submission_ID, Date, Time, datetime, Location, Number_of_Observers, Common_Name, Count, Breeding_Code, Observation_Details}, cIdx) => (\r\n\t\t\t\t<VerticalTimelineElement\r\n\t\t\t\t\tkey={`ebCard-${cIdx}`}\r\n\t\t\t\t\tcontentStyle={{ background: 'rgba(255, 255, 255, .1)', color: '#fff' }}// 內容箭頭樣式\r\n    \t\t\t\tdate={datetime} // 時間點\r\n    \t\t\t\ticonStyle={{ background: '#fff' }} // 節點樣式\r\n    \t\t\t\ticon={(<img className=\"timelineNodeIcon\" src={timelineImg} alt=\"\" />)} // 節點圖示\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* 地點 */}\r\n\t\t\t\t\t<h5>【{Location}】</h5>\r\n\t\t\t\t\t{/* 額外資訊 */}\r\n\t\t\t\t\t<div className=\"d-flex justify-content-around\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img className=\"point me-2\" src={point1} alt=\"•\" />\r\n\t\t\t\t\t\t\t<span className=\"align-middle\">人數：{Number_of_Observers}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img className=\"point me-2\" src={point2} alt=\"•\" />\r\n\t\t\t\t\t\t\t<span className=\"align-middle\">行為：{Breeding_Code && \"無\"}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img className=\"point me-2\" src={point3} alt=\"•\" />\r\n\t\t\t\t\t\t\t<span className=\"align-middle\">紀錄：{Observation_Details && \"無\"}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* 鳥種 */}\r\n\t\t\t\t\t<div className=\"btn-group timelineBirdBtnGroup mt-2\" role=\"group\">\r\n\t\t\t\t\t{Common_Name.map((name, nIdx) => (\r\n\t\t\t\t\t\t<button key={`ebBird-${nIdx}`} type=\"button\" className=\"btn btn-group-sm btn-outline-info\">{`${name}(${Count[nIdx]})`}</button>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* 鳥種圓餅圖 Modal 按鈕 */}\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-warning\" onClick={() => {handleModalInfoChange(Location, Common_Name, Count)}}>鳥種圓餅圖</button>\r\n\t\t\t\t</VerticalTimelineElement>\r\n\t\t\t))}\r\n\t\t\t</VerticalTimeline>\r\n\t\t\t{/* 鳥種圓餅圖 Modal */}\r\n\t\t\t<Modal\r\n\t\t\t\tshow={modalShow}\r\n\t\t\t\tonHide={handleModalClose}\r\n\t\t\t\tcentered // 垂直置中\r\n\t\t\t\tfullscreen={false} // true,sm-down,md-down,lg-down,xl-down,xxl-down\r\n\t\t\t\tscrollable={true} // Allows scrolling the <Modal.Body> instead of the entire Modal when overflowing.\r\n\t\t\t\tcontentClassName=\"bg-dark text-white\" // 暗色系背景\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton closeVariant=\"white\">\r\n\t\t\t\t\t<Modal.Title>{modalTitle}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>{modalBody}</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default EBirdChartsTimeline;\r\n","import { useState } from 'react';\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport { dataMergedByKeys } from './../utils/ebMetadata_dataExtraction';\r\nimport { getRandomColor } from './../utils/tools';\r\n\r\nconst EBirdChartsChart = ({ avatarIndex }) => {\r\n\t// 圖表需要的資料\r\n\tlet chartData = dataMergedByKeys(avatarIndex, [\"Submission_ID\"], [\"Common_Name\", \"Count\"], [\"Date\", \"Time\", \"Location\"], true, false);\r\n\t//console.log(chartData);\r\n\t// (重複)所有地點\r\n\tlet locations = chartData.reduce((arr, ele) => {\r\n\t\treturn [...arr, ele[\"Location\"][0]];\r\n\t}, []);\r\n\t// (不重複)所有地點\r\n\tlet nonDupLocations = [...new Set(locations)];\r\n\t// Lifer 需要的資料\r\n\tlet liferRawData = chartData.reduce((obj, ele, idx) => {\r\n\t\tlet newBS = ele[\"Common_Name\"];\r\n\t\tlet oldBS = obj[\"birdSpecies\"];\r\n\t\t// 該筆出現新紀錄鳥種\r\n\t\tlet diffBirdSpecies = newBS.filter(nbs => !oldBS.includes(nbs));\r\n\t\tobj[\"birdSpecies\"] = [...oldBS, ...diffBirdSpecies];\r\n\t\tobj[\"accuBirdNumbers\"] = [...obj[\"accuBirdNumbers\"], oldBS.length+diffBirdSpecies.length];\r\n\t\tobj[\"diffBirdNumbers\"] = [...obj[\"diffBirdNumbers\"], diffBirdSpecies.length];\r\n\t\tobj[\"eachBirdNumbers\"] = [...obj[\"eachBirdNumbers\"], newBS.length];\r\n\t\tobj[\"dates\"] = [...obj[\"dates\"], ele[\"Date\"]];\r\n\t\treturn obj;\r\n\t}, {\"birdSpecies\": [], \"accuBirdNumbers\": [], \"diffBirdNumbers\": [], \"eachBirdNumbers\": [], \"dates\": []});\r\n\t// Lifer 圖表資料\r\n\tlet liferData = {\r\n\t\tlabels: liferRawData[\"dates\"], // x-axis\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"生涯鳥種\",\r\n\t\t\t\tdata: liferRawData[\"accuBirdNumbers\"], // y-axis\r\n\t\t\t\tfill: \"start\", // 塗滿風格；start, end, origin\r\n\t\t\t\tbackgroundColor: \"rgba(255, 99, 132, .1)\",\r\n\t\t\t\tborderColor: \"rgba(255, 99, 132, 1)\",\r\n\t\t\t\tyAxisID: \"y-axis-1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"解鎖鳥種\",\r\n\t\t\t\tdata: liferRawData[\"diffBirdNumbers\"], // y-axis\r\n\t\t\t\tfill: \"start\", // 塗滿風格；start, end, origin\r\n\t\t\t\tbackgroundColor: \"rgba(115, 234, 255, .1)\",\r\n\t\t\t\tborderColor: \"rgba(115, 234, 255, 1)\",\r\n\t\t\t\tyAxisID: \"y-axis-2\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"觀察鳥種\",\r\n\t\t\t\tdata: liferRawData[\"eachBirdNumbers\"], // y-axis\r\n\t\t\t\tfill: \"start\", // 塗滿風格；start, end, origin\r\n\t\t\t\tbackgroundColor: \"rgba(149, 255, 146, .1)\",\r\n\t\t\t\tborderColor: \"rgba(149, 255, 146, 1)\",\r\n\t\t\t\tyAxisID: \"y-axis-2\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t// Lifer 圖表設定\r\n\tlet liferOptions = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\tid: \"y-axis-1\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\tid: \"y-axis-2\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\t// Succession 地點\r\n\tconst [succLocation, setSuccLocation] = useState(nonDupLocations[0]);\r\n\tconst handleSuccLocationChange = () => {\r\n\t\tsetSuccLocation(document.getElementById(\"succLocationSelect\").value);\r\n\t}\r\n\t// 該地點筆數\r\n\tlet succLocationNum = locations.filter(location => location === succLocation).length;\r\n\t// Succession 需要的資料\r\n\tlet succLocationIdx = 0; // 該地點第幾筆\r\n\tlet succRawData = chartData.reduce((obj, ele) => {\r\n\t\tlet eleLocation = ele[\"Location\"][0];\r\n\t\tif (eleLocation === succLocation) { // 該地點\r\n\t\t\tsuccLocationIdx += 1;\r\n\t\t\tobj[\"dates\"] = [...obj[\"dates\"], ele[\"Date\"]];\r\n\t\t\tlet eleNames = ele[\"Common_Name\"]; // 該筆所有鳥種\r\n\t\t\tlet eleCounts = ele[\"Count\"]; // 該筆所有鳥種數\r\n\t\t\tfor (let i = 0; i < eleNames.length; i++) { // 每一鳥種\r\n\t\t\t\tlet eleName = eleNames[i]; // 鳥種\r\n\t\t\t\tlet eleCount = eleCounts[i]; // 數量\r\n\t\t\t\tlet objCounts = obj[\"succBirds\"][eleName]; // 已登錄數量\r\n\t\t\t\tif (!objCounts) { // 未登錄過\r\n\t\t\t\t\tobj[\"succBirds\"][eleName] = [...new Array(succLocationIdx-1).fill(0), eleCount];\r\n\t\t\t\t} else { // 後續登錄\r\n\t\t\t\t\tobj[\"succBirds\"][eleName] = [...objCounts, ...new Array(succLocationIdx-1-objCounts.length).fill(0), eleCount];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn obj;\r\n\t}, {\"dates\": [], \"succBirds\": {}});\r\n\t// 所有鳥種數量檢查補零\r\n\tlet succBirds = succRawData[\"succBirds\"];\r\n\tfor (const name of Object.keys(succBirds)) { // 每一鳥種\r\n\t\tsuccBirds[name] = [...succBirds[name], ...new Array(succLocationNum-succBirds[name].length).fill(0)];\r\n\t}\r\n\t// Succession 圖表資料\r\n\tlet succData = {\r\n\t\tlabels: succRawData[\"dates\"], // x-axis\r\n\t\tdatasets: Object.entries(succRawData[\"succBirds\"]).reduce((arr, [name, counts]) => {\r\n\t\t\tlet color = getRandomColor(); // 隨機顏色\r\n\t\t\tlet dataset = {\r\n\t\t\t\tlabel: name,\r\n\t\t\t\tdata: counts,\r\n\t\t\t\tfill: \"start\",\r\n\t\t\t\tbackgroundColor: color.replace(\",1)\", \",.1)\"),\r\n\t\t\t\tborderColor: color,\r\n\t\t\t\tyAxisID: \"y-axis-1\"\r\n\t\t\t}\r\n\t\t\treturn [...arr, dataset];\r\n\t\t}, [])\r\n\t}\r\n\t// Succession 圖表設定\r\n\tlet succOptions = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\tid: \"y-axis-1\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div id=\"chartTab\" className=\"container-fluid\" aria-labelledby=\"chart\">\r\n\t\t\t{/* Lifer */}\r\n\t\t\t<div className=\"row my-3\">\r\n\t\t\t\t<Line data={liferData} options={liferOptions} />\r\n\t\t\t</div>\r\n\t\t\t{/* 地點的鳥種數隨時變化 */}\r\n\t\t\t<div className=\"row my-3\">\r\n\t\t\t\t{/* Succession 單選地點 */}\r\n\t\t\t\t<select\r\n\t\t\t\t\tid=\"succLocationSelect\"\r\n\t\t\t\t\tclassName=\"form-select form-select-sm\"\r\n\t\t\t\t\tonChange={handleSuccLocationChange}\r\n\t\t\t\t>\r\n\t\t\t\t{nonDupLocations.map((location, lIdx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<option key={`succLocationOption-${lIdx}`} value={location}>{location}</option>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t</select>\r\n\t\t\t\t{/* Succession */}\r\n\t\t\t\t<Line data={succData} options={succOptions} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default EBirdChartsChart;\r\n","import { useState, memo } from 'react';\r\n\r\nimport { Tabset, Tab } from 'react-rainbow-components';\r\n\r\nimport EBirdChartsMap from './EBirdChartsMap';\r\nimport EBirdChartsTimeline from './EBirdChartsTimeline';\r\nimport EBirdChartsChart from './EBirdChartsChart';\r\n\r\nconst EBirdCharts = ({ avatarIndex }) => {\r\n\t// 選擇的分頁\r\n\tconst [selectedTab, setSelectedTab] = useState(\"map\");\r\n\tconst handleSelectedTabChange = (tabName) => {\r\n\t\tsetSelectedTab(tabName);\r\n\t}\r\n\t// 分頁的內容\r\n\tconst getTabContent = () => {\r\n\t\tif (selectedTab === \"map\") { // 地圖分頁\r\n\t\t\treturn (<EBirdChartsMap avatarIndex={avatarIndex} />);\r\n\t\t} else if (selectedTab === \"timeline\") { // 時間軸分頁\r\n\t\t\treturn (<EBirdChartsTimeline avatarIndex={avatarIndex} />);\r\n\t\t} else if (selectedTab === \"chart\") { // 統計圖表分頁\r\n\t\t\treturn (<EBirdChartsChart avatarIndex={avatarIndex} />);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"ebTabsetContainer\">\r\n\t\t\t<Tabset\r\n\t\t\t\tid=\"ebTabset\"\r\n\t\t\t\tactiveTabName={selectedTab} // 分頁名字；<Tab name>\r\n\t\t\t\tfullWidth={false} // 是否伸展佔滿空間；true, false\r\n\t\t\t\tvariant=\"line\" // 分頁外觀；card, line\r\n\t\t\t\tonSelect={(e, tabName) => handleSelectedTabChange(tabName)}\r\n\t\t\t>\r\n\t\t\t\t{/* 留位置給 eBirder 抽屜開關 */}\r\n\t\t\t\t<Tab\r\n\t\t\t\t\tid=\"blank\"\r\n\t\t\t\t\tlabel=\"\"\r\n\t\t\t\t\tname=\"blank\"\r\n\t\t\t\t\tariaControls=\"blankTab\"\r\n\t\t\t\t\tdisabled={true}\r\n\t\t\t\t/>\r\n\t\t\t\t<Tab\r\n\t\t\t\t\tid=\"map\" // 分頁內容的 aria-labelledby\r\n\t\t\t\t\tlabel=\"地圖\" // 分頁顯示名稱\r\n\t\t\t\t\tname=\"map\" // 給 <Tabset onSelect> 配對的\r\n\t\t\t\t\tariaControls=\"mapTab\" // 分頁內容的 id\r\n\t\t\t\t/>\r\n\t\t\t\t<Tab\r\n\t\t\t\t\tid=\"timeline\"\r\n\t\t\t\t\tlabel=\"時間軸\"\r\n\t\t\t\t\tname=\"timeline\"\r\n\t\t\t\t\tariaControls=\"timelineTab\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Tab\r\n\t\t\t\t\tid=\"chart\"\r\n\t\t\t\t\tlabel=\"統計圖表\"\r\n\t\t\t\t\tname=\"chart\"\r\n\t\t\t\t\tariaControls=\"chartTab\"\r\n\t\t\t\t/>\r\n\t\t\t</Tabset>\r\n\t\t\t{/* 分頁內容 */}\r\n\t\t\t{getTabContent()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default memo(EBirdCharts);\r\n","import './ScrollTopArrow.css';\r\n\r\nconst ScrollTopArrow = ({showScroll, scrollToElement}) => {\r\n\treturn (\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"scrollTop bi bi-arrow-up-circle-fill\" viewBox=\"0 0 16 16\" onClick={scrollToElement} style={{ display: (showScroll ? 'flex' : 'none') }}>\r\n\t\t\t<path d=\"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"/>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default ScrollTopArrow;\r\n","import { useState } from 'react';\r\n\r\nimport { Drawer } from 'react-rainbow-components';\r\nimport Avatar from 'react-avatar';\r\n\r\nimport { infos } from './../utils/ebird-ebirders.js';\r\nimport { eBirderInfosToRainbowAvatars } from './../utils/ebEbirders_dataExtraction';\r\nimport EBirdCharts from './EBirdCharts';\r\nimport ScrollTopArrow from './../components/ScrollTopArrow';\r\nimport Footer from './../components/Footer';\r\nimport './EBird.css';\r\n\r\nconst EBird = ({ scrollToElement }) => {\r\n\t// eBirder 抽屜的開合\r\n\tconst [drawerOpen, setDrawerOpen] = useState(false);\r\n\t// 先從 LocalStorage 尋找是否有哪位 eBirder\r\n\tconst storageAvatar = parseInt(localStorage.getItem('avatarIndex')) || 0;\r\n\t// eBirder 列表\r\n\tconst [avatarIndex, setAvatarIndex] = useState(storageAvatar);\r\n\tconst handleAvatarIndexChange = (index) => {\r\n\t\tsetAvatarIndex(index);\r\n\t\tsetDrawerOpen(false); // 選擇完 eBirder 後，收合 Drawer\r\n\t\t/*\r\n         * localStorage 是瀏覽器提供給各網站的一個儲存空間\r\n         * >>> Browser > Application > Local Storage\r\n         * setItem(keyName, keyValue) / getItem(keyName) / removeItem(keyName) / clear()\r\n         */\r\n        localStorage.setItem('avatarIndex', index);\r\n\t}\r\n\tconst avatars = eBirderInfosToRainbowAvatars(handleAvatarIndexChange);\r\n\t// eBirder 個人資料\r\n\tconst eBirderInfo = infos[avatarIndex];\r\n\t// 滾動至頂按鈕\r\n\tconst [showScroll, setShowScroll] = useState(false); // 顯示狀態\r\n\tconst handleScrollTop = target => { // 改變顯示狀態\r\n\t\tif (!showScroll && target.scrollTop > 500) { // 頁面捲動 500px 後，顯示按鈕\r\n\t\t\tsetShowScroll(true);\r\n\t\t} else if (showScroll && target.scrollTop <= 500) { // 頁面捲動接近頂端，隱藏按鈕\r\n\t\t\tsetShowScroll(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className=\"h-100 px-3\" onScroll={e => {\r\n\t\t\thandleScrollTop(e.target);\r\n\t\t}}>\r\n\t\t\t<div id=\"ebDrawerContainer\">\r\n\t\t\t\t{/* eBirder 抽屜開關 */}\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"ebDrawerBtn\"\r\n\t\t\t\t\tonClick={() => setDrawerOpen(true)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\tname={eBirderInfo['name']}\r\n\t\t\t\t\t\talt={eBirderInfo['name']}\r\n\t\t\t\t\t\ttitle={eBirderInfo['name']}\r\n\t\t\t\t\t\tsize=\"70\"\r\n\t\t\t\t\t\tround={true}\r\n\t\t\t\t\t\tsrc={eBirderInfo['avatar']}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* eBirder 抽屜 */}\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tid=\"ebDrawer\"\r\n\t\t\t\t\tclassName=\"bg-dark\"\r\n\t\t\t\t\tfooter=\"\" // 結尾；text, Component\r\n\t\t\t\t\theader=\"eBirders\"\r\n\t\t\t\t\thideCloseButton={false} // 關閉按鈕(叉叉)\r\n\t\t\t\t\tisOpen={drawerOpen} // 開合狀態\r\n\t\t\t\t\tsize=\"small\" // 寬度；small, medium, large, full\r\n\t\t\t\t\tslideFrom=\"left\" // 從何方向展開；left, right\r\n\t\t\t\t\tonRequestClose={() => setDrawerOpen(false)} // 在\"點擊叉叉\"或\"按 ESC\"或\"點擊抽屜外\"的動作\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* eBirders */}\r\n\t\t\t\t\t{avatars}\r\n\t\t\t\t</Drawer>\r\n\t\t\t</div>\r\n\t\t\t{/* 圖表區 */}\r\n\t\t\t<EBirdCharts avatarIndex={avatarIndex} />\r\n\t\t\t{/* 滾動至頂按鈕 */}\r\n\t\t\t<ScrollTopArrow showScroll={showScroll} scrollToElement={() => scrollToElement(document.getElementById(\"ebTabsetContainer\"))} />\r\n\r\n\t\t\t<Footer />\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default EBird;\r\n","import Avatar from 'react-avatar';\r\n\r\nimport { infos } from './ebird-ebirders.js';\r\n/*\r\n * 產生 React Rainbow Components 人物頭像圖示清單\r\n * 輸出：Avatar Component 列表\r\n */\r\nexport const eBirderInfosToRainbowAvatars = (handleAvatarIndexChange) => {\r\n\treturn (\r\n\t\t<div id=\"ebAvatars\" className=\"text-center\">\r\n\t\t\t{infos.map((info, iIdx) => { // 對於每位 eBirder\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\tkey={`ebAvatar-${iIdx}`}\r\n\t\t\t\t\t\tclassName=\"eBirder\"\r\n\t\t\t\t\t\tname={info['name']}\r\n\t\t\t\t\t\tvalue={iIdx.toString()}\r\n\t\t\t\t\t\talt={info['name']}\r\n\t\t\t\t\t\ttitle={info['name']}\r\n\t\t\t\t\t\tsize=\"100%\" // 圖像大小\r\n\t\t\t\t\t\tround={true} // border-radius；number, true(100%), false(0%)\r\n\t\t\t\t\t\tsrc={info['avatar']} // 載入照片\r\n\t\t\t\t\t\tstyle={{padding: \"10px\"}}\r\n\t\t\t\t\t\tonClick={() => {handleAvatarIndexChange(iIdx);}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport YouTube from 'react-youtube';\r\n// 影片卡片各元素的 Class\r\nvar classNames = {\r\n\t\"playButton\": \"playBtn\", // 模仿的播放按鈕\r\n\t\"previewImage\": \"previewImg\", // 預覽圖片\r\n\t\"iframe\": \"ytVideo\" // YouTube 影片容器\r\n}\r\n\r\nconst YoutubeVideo = ({ videoId, videoLid, handleVideoPlay, handleVideoStop }) => {\r\n\t// 載入真正的 YouTube 影片\r\n\tconst [showVideo, setShowVideo] = useState(false);\r\n\tconst handleShowVideoChange = () => {\r\n\t\tsetShowVideo(true);\r\n\t}\r\n\t/*\r\n\t * YouTube API 的設定選項\r\n\t * https://developers.google.com/youtube/player_parameters\r\n\t */\r\n\tconst opts = {\r\n\t\tplayerVars: {\r\n\t\t\tautoplay: 1, // 0, 1\r\n\t\t\tcolor: \"red\", // 觀看進度條顏色：red, white\r\n\t\t\tcontrols: 1, // 播放器控制顯示：0, 1\r\n\t\t\tlist: (videoLid ? videoLid : undefined), // 播放清單 ID\r\n\t\t\tlistType: \"playlist\" // 播放清單選單\r\n\t\t}\r\n\t}\r\n\t// 預設為圖片，點選後載入真正影片\r\n\treturn !showVideo ?\r\n\t\tReact.createElement(\"div\", {\r\n\t\t\tclassName: classNames.previewImage,\r\n\t\t\tstyle: { // 圖片畫質：hqdefault, mqdefault, sddefault, default, maxresdefault\r\n\t\t\t\tbackgroundImage: \"url(https://img.youtube.com/vi/\" + videoId + \"/hqdefault.jpg)\"\r\n\t\t\t},\r\n\t\t\tonClick: handleShowVideoChange\r\n\t\t}, React.createElement(\"div\", {\r\n\t\t\tclassName: classNames.playButton\r\n\t\t}))\r\n\t\t:\r\n\t\t<YouTube\r\n\t\t\tvideoId={videoId}\r\n\t\t\tid={videoId}\r\n\t\t\tclassName={classNames.iframe} // 為了限制高度\r\n\t\t\topts={opts}\r\n\t\t\tonPlay={e => handleVideoPlay(e.target)}\r\n\t\t\tonPause={e => handleVideoStop(e.target)}\r\n\t\t\tonEnd={e => handleVideoStop(e.target)}\r\n\t\t/>\r\n}\r\n\r\nexport default YoutubeVideo;\r\n","import { Select, MultiSelect, Option } from 'react-rainbow-components';\r\nimport FadeIn from 'react-fade-in';\r\n\r\nimport youTubeVideosData from './youtube-videos.json';\r\nimport YoutubeVideo from './../components/YoutubeVideo';\r\nimport { arrayToChunks } from './tools.js';\r\n/*\r\n * 取得所有影片的某項資訊\r\n * key: 影片資訊欄位\r\n * duplicate: 重不重複\r\n * chunk: 配合 BS Grid System 進行資料分組\r\n * (chunk=false) 輸出：[a, b, c, ...]\r\n * (chunk=true) 輸出：[[a, b, c], [...], ...]\r\n */\r\nexport const getItems = (key, duplicate=false, chunk = false) => {\r\n\t// 收集所有資料\r\n\tlet items = youTubeVideosData.reduce((arr, ele) => \r\n\t\tarr.concat([ele[key]])\r\n\t, []);\r\n\t// 取不重複\r\n\tif (!duplicate) {\r\n\t\titems = [...(new Set(items))];\r\n\t}\r\n\t// 資料分組\r\n\tif (chunk) {\r\n\t\titems = arrayToChunks(items, 6);\r\n\t}\r\n\treturn items;\r\n}\r\n/*\r\n * 產生 React Rainbow Components 選單的選項\r\n * items: 一階陣列資料\r\n * 輸出：產生選項所需資料\r\n */\r\nexport const itemsToRainbowSelectOptions = (items, id, label, value, onChange, hasDefault=false) => {\r\n\tlet allOption = { value: \"*全部\", label: \"*全部\" }; // 預設值\r\n\tlet options = items.reduce((arr, ele) => \r\n\t\tarr.concat([{ value: ele, label: ele }])\r\n\t, []);\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tid={id}\r\n\t\t\tlabel={label}\r\n\t\t\tlabelAlignment=\"left\"\r\n\t\t\thideLabel={false}\r\n\t\t\toptions={hasDefault ? [...options, allOption] : options}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={onChange}\r\n\t\t\tvariant=\"default\" // 篩選框 style；default, shaded\r\n\t\t/>\r\n\t);\r\n}\r\n/*\r\n * 產生 React Rainbow Components 多選選單的選項\r\n * items: 一階陣列資料\r\n * 輸出：產生多選選項\r\n */\r\nexport const itemsToRainbowMultiSelectOptions = (items, id, label, value, onChange, placeholder) => {\r\n\treturn (\r\n\t\t<MultiSelect\r\n\t\t\tid={id}\r\n\t\t\tlabel={label}\r\n\t\t\tlabelAlignment=\"left\"\r\n\t\t\thideLabel={false}\r\n\t\t\tisLoading={false} // 選項載入中圖示\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={onChange}\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tvariant=\"default\" // 篩選框 style；default, chip, bare\r\n\t\t\tchipVariant=\"brand\" // 選擇結果 style；base, neutral, outline-brand, brand\r\n\t\t\tshowCheckbox\r\n\t\t>\r\n\t\t\t{items.map((item, iIdx) => (\r\n\t\t\t\t<Option key={`ytMultiSelect-${iIdx}`} name={`option-${iIdx}`} label={item} value={item} />\r\n\t\t\t))}\r\n\t\t</MultiSelect>\r\n\t);\r\n}\r\n/*\r\n * 建立所有影片卡片\r\n * vids: 所有影片 ID\r\n * dates: 所有影片日期\r\n * locations: 所有影片地點\r\n * birds: 所有影片鳥種\r\n * 輸出：Responsive YouTube Video Cards\r\n */\r\nexport const vidsToVideoCards = (vids, dates, locations, birds, handleVideoPlay, handleVideoStop) => { // 暫時 birds/dates，可改其他做 header\r\n\treturn (\r\n\t\t<FadeIn className=\"d-flex flex-row flex-wrap justify-content-center py-2\" childClassName=\"ytVideoContainer m-2\" delay=\"77\" transitionDuration=\"777\" wrapperTag=\"div\" childTag=\"div\" visible={true}>\r\n\t\t{/* 所有影片為了百葉窗動畫放在一起 */}\r\n\t\t{vids.map((vid, vIdx) => {\r\n\t\t\tlet date = dates[vIdx];\r\n\t\t\tlet location = locations[vIdx];\r\n\t\t\tlet bird = birds[vIdx];\r\n\t\t\treturn (\r\n\t\t\t\t<div key={`ytVideo-${vIdx}`} className={`${date} ${location} ${bird}`}>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header\"> {/* 影片標題 */}\r\n\t\t\t\t\t\t\t{date + \" / \" + location + \" / \" + bird}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body p-0\"> {/* 影片內容 */}\r\n\t\t\t\t\t\t\t<YoutubeVideo videoId={vid} videoLid=\"\" handleVideoPlay={handleVideoPlay} handleVideoStop={handleVideoStop} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t})}\r\n\t\t</FadeIn>\r\n\t);\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { DatePicker } from 'react-rainbow-components';\r\n\r\nimport { getItems, itemsToRainbowMultiSelectOptions, vidsToVideoCards } from './../utils/ytVideos_dataExtraction';\r\nimport ScrollTopArrow from './../components/ScrollTopArrow';\r\nimport Footer from './../components/Footer';\r\nimport './YouTube.css';\r\n// 篩選參數篩選值\r\nvar userParameters = {\r\n\tuserDates: [],\r\n\tuserLocations: [],\r\n\tuserBirds: []\r\n}\r\n// Rainbow DatePicker 的輸出簡化為值陣列\r\nconst datePickerOutputToValues = datePickerOutput => {\r\n\treturn datePickerOutput.reduce((arr, ele) => {\r\n\t\tlet localeDateStrings = ele.toLocaleDateString('zh-tw').split('/'); // 2021/7/20\r\n\t\tlet year = localeDateStrings[0]; // 2021\r\n\t\tlet month = localeDateStrings[1].padStart(2, '0'); // 07\r\n\t\tlet day = localeDateStrings[2].padStart(2, '0'); // 20\r\n\t\treturn arr.concat([`${year}-${month}-${day}`]); // 2021-07-20\r\n\t}, []);\r\n}\r\n// Rainbow MultiSelect 的輸出簡化為值陣列\r\nconst multiSelectOutputToValues = multiSelectOutput => {\r\n\treturn multiSelectOutput.reduce((arr, ele) => {\r\n\t\treturn arr.concat([ele.value]);\r\n\t}, []);\r\n}\r\n// 捲動頁面立即暫停所有播放中的影片\r\nconst pauseVideos = playingVideos => {\r\n\tfor (let i = 0; i < playingVideos.length; i++) {\r\n\t\tplayingVideos[i].pauseVideo();\r\n\t}\r\n}\r\n// 收集播放中的影片\r\nvar playingVideos = []; // 播放中的影片清單\r\nconst handleVideoPlay = target => { // 當影片播放\r\n\tplayingVideos.push(target); // 加入播放中影片\r\n}\r\nconst handleVideoStop = target => { // 當影片暫停或結束\r\n\tlet index = playingVideos.indexOf(target);\r\n\tplayingVideos.splice(index, 1); // 從播放中影片清單移除\r\n}\r\n\r\nconst YouTube = ({ scrollToElement }) => {\r\n\t// 若玩過此頁面後，切換至其他分頁再切回來，篩選值歸零\r\n\tconst setUserParameters = () => {\r\n\t\tuserParameters = {\r\n\t\t\tuserDates: [],\r\n\t\t\tuserLocations: [],\r\n\t\t\tuserBirds: []\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => { // 初次進入該分頁時，把之前篩選歷史清除\r\n\t\tsetUserParameters();\r\n\t}, []);\r\n\t// 使用者設定所有篩選參數的值\r\n\tconst handleUserChange = () => {\r\n\t\tlet { userDates, userLocations, userBirds } = userParameters;\r\n\t\tlet filterVids = [], filterDates = [], filterLocations = [], filterBirds = [];\r\n\t\tfor (let i = 0; i < fullVids.length; i++) { // 從所有影片來篩選\r\n\t\t\tlet fullVid = fullVids[i], fullDate = fullDates[i], fullLocation = fullLocations[i], fullBird = fullBirds[i];\r\n\t\t\tlet fullDateTime = new Date(fullDate).getTime();\r\n\t\t\t// Date Object 比較用 getTime()；有時間點與時間區間\r\n\t\t\tlet booleanDate = !userDates.length || (userDates.length === 1 && fullDateTime === new Date(userDates[0]).getTime()) || (userDates.length === 2 && new Date(userDates[1]).getTime() >= fullDateTime && fullDateTime >= new Date(userDates[0]).getTime());\r\n\t\t\t // (若無設定篩選則通過 || 若有則篩選)\r\n\t\t\tlet booleanLocation = (!userLocations.length || userLocations.includes(fullLocation));\r\n\t\t\tlet booleanBird = (!userBirds.length || userBirds.includes(fullBird));\r\n\t\t\tif (booleanDate && booleanLocation && booleanBird) {\r\n\t\t\t\tfilterVids.push(fullVid);\r\n\t\t\t\tfilterDates.push(fullDate);\r\n\t\t\t\tfilterLocations.push(fullLocation);\r\n\t\t\t\tfilterBirds.push(fullBird);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 經過篩選後剩下的影片\r\n\t\tlet filterVideoCards = vidsToVideoCards(filterVids, filterDates, filterLocations, filterBirds, handleVideoPlay, handleVideoStop);\r\n\t\tsetVideoCards(filterVideoCards);\r\n\t}\r\n\t// 篩選參數：日期\r\n\tconst [dateRange, setDateRange] = useState(new Date()); // 單選日期或日期區間\r\n\tconst handleDateRangeChange = userDateArray => {\r\n\t\tsetDateRange(userDateArray); // 更新日期篩選值(物件陣列)\r\n\t\tuserParameters = { // 更新日期篩選值(值陣列)\r\n\t\t\t...userParameters,\r\n\t\t\tuserDates: datePickerOutputToValues(userDateArray)\r\n\t\t}\r\n\t\thandleUserChange(); // 更新符合的影片\r\n\t}\r\n\t// 篩選參數：地點\r\n\tconst [locations, setLocations] = useState([]); // 多選地點清單\r\n\tconst handleLocationsChange = userLocationObjects => {\r\n\t\tsetLocations(userLocationObjects); // 更新地點篩選值(物件陣列)\r\n\t\tuserParameters = { // 更新地點篩選值(值陣列)\r\n\t\t\t...userParameters,\r\n\t\t\tuserLocations: multiSelectOutputToValues(userLocationObjects)\r\n\t\t}\r\n\t\thandleUserChange(); // 更新符合的影片\r\n\t}\r\n\tconst listLocations = getItems('location'); // 不重複地點\r\n\tconst locationMultiSelect = itemsToRainbowMultiSelectOptions(listLocations, \"ytLocationMultiSelect\", \"地點\", locations, handleLocationsChange, \"賞鳥地點\"); // 地點篩選選項\r\n\t// 篩選參數：鳥種\r\n\tconst [birds, setBirds] = useState([]); // 多選鳥種清單\r\n\tconst handleBirdsChange = userBirdObjects => {\r\n\t\tsetBirds(userBirdObjects); // 更新鳥種篩選值(物件陣列)\r\n\t\tuserParameters = { // 更新鳥種篩選值(值陣列)\r\n\t\t\t...userParameters,\r\n\t\t\tuserBirds: multiSelectOutputToValues(userBirdObjects)\r\n\t\t}\r\n\t\thandleUserChange(); // 更新符合的影片\r\n\t}\r\n\tconst listBirds = getItems('bird'); // 不重複鳥種\r\n\tconst birdMultiSelect = itemsToRainbowMultiSelectOptions(listBirds, \"ytBirdMultiSelect\", \"鳥種\", birds, handleBirdsChange, \"觀賞鳥種\"); // 鳥種篩選選項\r\n\t// 影片列表\r\n\tconst fullVids = getItems('vid', true); // 所有重複影片 ID\r\n\tconst fullDates = getItems('date', true); // 所有重複日期\r\n\tconst fullLocations = getItems('location', true); // 所有重複地點\r\n\tconst fullBirds = getItems('bird', true); // 所有重複鳥種\r\n\tconst fullVideos = vidsToVideoCards(fullVids, fullDates, fullLocations, fullBirds, handleVideoPlay, handleVideoStop); // 所有重複影片\r\n\tconst [videoCards, setVideoCards] = useState(fullVideos);\r\n\t// 滾動至頂按鈕\r\n\tconst [showScroll, setShowScroll] = useState(false); // 顯示狀態\r\n\tconst handleScrollTop = target => { // 改變顯示狀態\r\n\t\tif (!showScroll && target.scrollTop > 500) { // 頁面捲動 500px 後，顯示按鈕\r\n\t\t\tsetShowScroll(true);\r\n\t\t} else if (showScroll && target.scrollTop <= 500) { // 頁面捲動接近頂端，隱藏按鈕\r\n\t\t\tsetShowScroll(false);\r\n\t\t}\r\n\t}\r\n\t// 最新日期作為日期篩選上限\r\n\tconst latestDateYMD = fullDates[0][0].split('-');\r\n\tconst latestYear = parseInt(latestDateYMD[0]);\r\n\tconst latestMonth = parseInt(latestDateYMD[1]);\r\n\tconst latestDay = parseInt(latestDateYMD[2]);\r\n\r\n\treturn (\r\n\t\t<main className=\"h-100\" onScroll={e => {\r\n\t\t\thandleScrollTop(e.target);\r\n\t\t\tpauseVideos(playingVideos);\r\n\t\t}}>\r\n\t\t\t{/* 篩選參數區域 */}\r\n\t\t\t<div className=\"sortPanel w-100 d-inline-flex justify-content-evenly pb-3 sticky-top row\">\r\n\t\t\t\t<div className=\"col-sm-4 d-inline-flex\">\r\n\t\t\t\t\t{/* 日期選擇器 */}\r\n\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\tid=\"ytDatePicker\"\r\n\t\t\t\t\t\tformatStyle=\"medium\" // 顯示於框格中的日期格式；small, medium, large\r\n\t\t\t\t\t\tlabel=\"日期\" // 標題\r\n\t\t\t\t\t\tlabelAlignment=\"left\" // 標題位置；left, center, right\r\n\t\t\t\t\t\thideLabel={false} // 標題顯示；boolean\r\n\t\t\t\t\t\tisCentered={true} // 框格中的提示位置；boolean\r\n\t\t\t\t\t\tlocale=\"tw\" // 地區；預設為瀏覽器語言\r\n\t\t\t\t\t\tmaxDate={new Date(latestYear, latestMonth-1, latestDay)} // 依照 YouTube 賞鳥紀錄最新影片日期\r\n\t\t\t\t\t\tminDate={new Date(2020, 10, 26)} // 第一部影片日期\r\n\t\t\t\t\t\tonChange={value => handleDateRangeChange(value)} // 更新日期狀態\r\n\t\t\t\t\t\tplaceholder=\"單一日期 或 日期區間\" // 框格中的提示內容\r\n\t\t\t\t\t\tselectionType=\"range\" // 日期模式；single, range\r\n\t\t\t\t\t\tvalue={dateRange} // 日期的值\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div id=\"ytDatePickerDelBtn\" onClick={() => {handleDateRangeChange([]);}}>\r\n\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"rgba(1,182,245,1)\" className=\"bi bi-x-circle\" viewBox=\"0 0 16 16\">\r\n\t\t\t\t\t\t\t<path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n\t\t\t\t\t\t\t<path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-sm-4\">\r\n\t\t\t\t\t{locationMultiSelect}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-sm-4\">\r\n\t\t\t\t\t{birdMultiSelect}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{/* 影片區域 */}\r\n\t\t\t<div id=\"ytVideosContainer\">\r\n\t\t\t\t{videoCards}\r\n\t\t\t</div>\r\n\t\t\t{/* 滾動至頂按鈕 */}\r\n\t\t\t<ScrollTopArrow showScroll={showScroll} scrollToElement={() => scrollToElement(document.getElementById(\"ytVideosContainer\"))} />\r\n\r\n\t\t\t<Footer />\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default YouTube;\r\n","const Photos = () => {\r\n\treturn (\r\n\t\t<main className=\"main main-no-content text-white\">\r\n\t\t\tWelcome to my photos!\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Photos;","const Records = () => {\r\n\treturn (\r\n\t\t<main className=\"main main-no-content text-white\">\r\n\t\t\tWelcome to my records!\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Records;","const About = () => {\r\n\treturn (\r\n\t\t<main className=\"h-100\">\r\n\t\t\t\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default About;\r\n","import {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute\r\n} from 'react-router-dom';\r\n\r\nimport Layout from './Layout';\r\n\r\nimport Home from './views/Home';\r\nimport EBird from './views/EBird';\r\nimport YouTube from './views/YouTube';\r\nimport Photos from './views/Photos';\r\nimport Records from './views/Records';\r\nimport About from './views/About';\r\n\r\nconst RootRouter = () => {\r\n\t// 頁面滾動至某元素\r\n\tconst scrollToElement = target => {\r\n\t\ttarget.scrollIntoView({ behavior: 'smooth' }); // 平滑地滾動到可見\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Layout> {/* 所有頁面的模板 */}\r\n\t\t\t\t<Switch> {/* 匹配路徑載入對應分頁元件 */}\r\n\t\t\t\t\t<Route exact path=\"/bird-watching\" component={Home} />\r\n\t\t\t\t\t<Route exact path=\"/bird-watching/ebird\" component={() => \r\n\t\t\t\t\t\t<EBird scrollToElement={scrollToElement} />\r\n\t\t\t\t\t} />\r\n\t\t\t\t\t<Route exact path=\"/bird-watching/youtube\" component={() => \r\n\t\t\t\t\t\t<YouTube scrollToElement={scrollToElement} />\r\n\t\t\t\t\t} />\r\n\t\t\t\t\t<Route exact path=\"/bird-watching/photos\" component={Photos} />\r\n\t\t\t\t\t<Route exact path=\"/bird-watching/records\" component={Records} />\r\n\t\t\t\t\t<Route exact path=\"/bird-watching/about\" component={About} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Layout>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default RootRouter;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport RootRouter from './router';\n\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport '../node_modules/leaflet/dist/leaflet.css';\nimport '../node_modules/react-leaflet-markercluster/dist/styles.min.css';\n//import 'leaflet-defaulticon-compatibility';\n\nimport '../node_modules/react-vertical-timeline-component/style.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootRouter /> {/* 轉換頁面分流器 */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}