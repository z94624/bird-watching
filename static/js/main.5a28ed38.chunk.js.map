{"version":3,"sources":["reportWebVitals.js","images/logo.png","components/Header.js","components/Footer.js","Layout.js","views/Home.js","views/EBird.js","components/YoutubeVideo.js","utils/ytVideos_dataExtraction.js","components/ScrollTopArrow.js","views/YouTube.js","views/Photos.js","views/Records.js","router.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","navList","to","text","Header","useState","isNavCollapsed","setIsNavCollapsed","className","src","LogoIcon","alt","width","height","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","onClick","id","map","idx","exact","activeClassName","Footer","Layout","children","Home","EBird","classNames","YoutubeVideo","videoId","videoLid","showVideo","setShowVideo","React","createElement","frameBorder","allowFullScreen","style","backgroundImage","getItems","key","duplicate","chunk","items","youTubeVideosData","reduce","arr","ele","concat","Set","arrayToChunks","size","chunkedArray","length","push","splice","itemsToRainbowOptions","value","label","ScrollTopArrow","showScroll","scrollToElement","xmlns","fill","viewBox","display","d","YouTube","Date","dateRange","setDateRange","locations","locationOptions","birds","birdOptions","videoCards","vids","dates","row","rIdx","vid","vIdx","vidsToVideoCards","setShowScroll","onScroll","e","target","scrollTop","formatStyle","labelAlignment","hideLabel","isCentered","locale","maxDate","minDate","onChange","placeholder","selectionType","options","document","getElementById","Photos","Records","RootRouter","scrollIntoView","behavior","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5a28ed38.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.4fc1974f.png\";","import { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport LogoIcon from './../images/logo.png';\r\n// 各分頁的名稱與路徑\r\nconst navList = [\r\n    // 呈現 eBird 輸出的 MetaData\r\n\t{to: \"/bird-watching/ebird\", text: \"eBird\"},\r\n    // 展示 smoBEE Universe 的\"賞鳥紀錄\"播放清單所有影片\r\n\t{to: \"/bird-watching/youtube\", text: \"YouTube\"},\r\n    // Google Drive 中的鳥照\r\n\t{to: \"/bird-watching/photos\", text: \"Photos\"},\r\n    // Google Drive 中的鳥音\r\n\t{to: \"/bird-watching/records\", text: \"Records\"}\r\n];\r\n\r\nconst Header = () => {\r\n\t// 分頁列表選單的開合狀態\r\n\tconst [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n    const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n\r\n\treturn (\r\n\t\t<header className=\"ps-3\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    {/* 網頁品牌 */}\r\n                    <NavLink className=\"navbar-brand float-md-start\" to=\"/bird-watching\">\r\n                        <img src={LogoIcon} alt=\"島羽\" width=\"50\" height=\"auto\" /> {/* 品牌圖示 */}\r\n                        <span className=\"ms-2\">楓楓與小芬的島羽</span> {/* 品牌名稱 */}\r\n                    </NavLink>\r\n                    {/* 分頁列表的展開按鈕 */}\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTabs\" aria-controls=\"navbarTabs\" aria-expanded={!isNavCollapsed ? true : false} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    {/* 分頁列表 */}\r\n                    <div className={`${isNavCollapsed ? 'collapse' : ''} navbar-collapse ms-5`} id=\"navbarTabs\">\r\n                        <ul className=\"navbar-nav\">\r\n                        \t{navList.map(({to, text}, idx) => (\r\n                        \t\t<li key={\"navItem-\"+idx} className=\"nav-item\">\r\n                        \t\t\t<NavLink\r\n                        \t\t\t\texact\r\n                        \t\t\t\tclassName=\"nav-link\"\r\n                        \t\t\t\tactiveClassName=\"nav-link-active\"\r\n                        \t\t\t\tto={to} // 分頁路徑\r\n                        \t\t\t>\r\n                        \t\t\t\t{text} {/* 分頁名稱 */}\r\n                        \t\t\t</NavLink>\r\n                        \t\t</li>\r\n                    \t\t))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n\treturn (\r\n\t\t<footer className=\"pt-3 text-white-50\">\r\n            <p>Copyright © 2021 芬峯拉泡樂</p>\r\n        </footer>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n","import { Fragment } from 'react';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nconst Layout = ({children}) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"h-100 bg-dark text-center\">\r\n            \t<div className=\"cover-container d-flex h-100 p-0 flex-column\">\r\n\t\t\t\t\t<Header className=\"fixed-top\" /> {/* 每個分頁都要有途徑轉換至其他分頁 */}\r\n\t\t\t\t\t{children} {/* 每個分頁的頁面 */}\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</div>\r\n        \t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default Layout;\r\n","import { NavLink } from 'react-router-dom';\n\nimport './Home.css';\n\nconst Home = () => {\n    return (\n        <main className=\"main-home d-flex align-items-center justify-content-center\">\n            <NavLink to=\"/bird-watching/youtube\" className=\"btn btn-lg fw-bold btn-outline-light\">進入羽林</NavLink>\n        </main>\n    );\n}\n\nexport default Home;\n","const EBird = () => {\r\n\treturn (\r\n\t\t<main className=\"main main-no-content text-white\">\r\n\t\t\tWelcome to my eBird!\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default EBird;","import React, { useState } from 'react';\r\n// 影片卡片各元素的 Class\r\nvar classNames = {\r\n\t\"playButton\": \"playBtn\", // 模仿的播放按鈕\r\n\t\"previewImage\": \"previewImg\", // 預覽圖片\r\n\t\"iframe\": \"ytIframe\" // YouTube 影片容器\r\n}\r\n\r\nconst YoutubeVideo = ({ videoId, videoLid }) => {\r\n\t// 載入真正的 YouTube 影片\r\n\tconst [showVideo, setShowVideo] = useState(false);\r\n\tconst handleShowVideoChange = () => {\r\n\t\tsetShowVideo(true);\r\n\t}\r\n\t// 預設為圖片，點選後載入真正影片\r\n\treturn !showVideo ?\r\n\t\tReact.createElement(\"div\", {\r\n\t\t\tclassName: classNames.previewImage,\r\n\t\t\tstyle: { // 圖片畫質：hqdefault, mqdefault, sddefault, default, maxresdefault\r\n\t\t\t\tbackgroundImage: \"url(https://img.youtube.com/vi/\" + videoId + \"/hqdefault.jpg)\"\r\n\t\t\t},\r\n\t\t\tonClick: handleShowVideoChange\r\n\t\t}, React.createElement(\"div\", {\r\n\t\t\tclassName: classNames.playButton\r\n\t\t})) :\r\n\t\tReact.createElement(\"iframe\", {\r\n\t\t\tclassName: classNames.iframe,\r\n\t\t\tsrc: (!videoLid ?\r\n\t\t\t\t\"https://www.youtube.com/embed/\" + videoId + \"?rel=0&showinfo=0&autoplay=1\" :\r\n\t\t\t\t\"https://www.youtube.com/embed?listType=playlist&list=\" + videoLid + \"&rel=0&showinfo=0&autoplay=1\"\r\n\t\t\t),\r\n\t\t\tframeBorder: \"0\",\r\n\t\t\tallowFullScreen: true\r\n\t\t});\r\n}\r\n\r\nexport default YoutubeVideo;\r\n","import youTubeVideosData from './youtube-videos.json';\r\nimport YoutubeVideo from './../components/YoutubeVideo';\r\n/*\r\n * 取得所有影片的某項資訊\r\n * key: 影片資訊欄位\r\n * duplicate: 重不重複\r\n * chunk: 配合 BS Grid System 進行資料分組\r\n * (chunk=false) 輸出：[a, b, c, ...]\r\n * (chunk=true) 輸出：[[a, b, c], [...], ...]\r\n */\r\nexport const getItems = (key, duplicate=false, chunk = false) => {\r\n\t// 收集所有資料\r\n\tlet items = youTubeVideosData.reduce((arr, ele) => \r\n\t\tarr.concat([ele[key]])\r\n\t, []);\r\n\t// 取不重複\r\n\tif (!duplicate) {\r\n\t\titems = [...(new Set(items))];\r\n\t}\r\n\t// 資料分組\r\n\tif (chunk) {\r\n\t\titems = arrayToChunks(items, 4);\r\n\t}\r\n\treturn items;\r\n}\r\n/*\r\n * 陣列元素分組\r\n * arr: 一階陣列\r\n * size: 每組元素個數\r\n * 輸出：二階陣列\r\n */\r\nconst arrayToChunks = (arr, size) => {\r\n\tvar chunkedArray = [];\r\n\twhile (arr.length) {\r\n\t\tchunkedArray.push(arr.splice(0, size));\r\n\t}\r\n\treturn chunkedArray;\r\n}\r\n/*\r\n * 產生 React Rainbow Components 選單的選項\r\n * items: 一階陣列資料\r\n * 輸出：產生選項所需資料\r\n */\r\nexport const itemsToRainbowOptions = (items) => {\r\n\tlet allOption = { value: \"*全部\", label: \"*全部\" }; // 預設值\r\n\treturn items.reduce((arr, ele) => \r\n\t\tarr.concat([{ value: ele, label: ele }])\r\n\t, [allOption]);\r\n}\r\n/*\r\n * 建立所有影片卡片\r\n * vids: 所有影片 ID\r\n * dates: 所有影片日期\r\n * locations: 所有影片地點\r\n * birds: 所有影片鳥種\r\n * 輸出：Responsive YouTube Video Cards\r\n */\r\nexport const vidsToVideoCards = (vids, dates, locations, birds) => { // 暫時 birds/dates，可改其他做 header\r\n\treturn (\r\n\t\t<div id=\"ytVideosContainer\">\r\n\t\t\t{/* 每列的影片 */}\r\n\t\t\t{vids.map((row, rIdx) => (\r\n\t\t\t\t<div key={\"ytVideo-row-\"+rIdx} className=\"row m-2\">\r\n\t\t\t\t{/* 每支影片 */}\r\n\t\t\t\t{row.map((vid, vIdx) => (\r\n\t\t\t\t\t<div key={\"ytVideo-\"+vIdx} className=\"col-md-3 col-sm-6 p-2\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\"> {/* 影片標題 */}\r\n\t\t\t\t\t\t\t\t{dates[rIdx][vIdx] + \" / \" + locations[rIdx][vIdx] + \" / \" + birds[rIdx][vIdx]}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body p-0\"> {/* 影片內容 */}\r\n\t\t\t\t\t\t\t\t{/*<div className=\"lazyLoad\" data-id={vid}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"ll-play-btn\" role=\"button\"></div>\r\n\t\t\t\t\t\t\t\t\t<img className=\"w-100\" role=\"button\" src={\"https://img.youtube.com/vi/\"+vid+\"/maxresdefault.jpg\"} alt={vid} />\r\n\t\t\t\t\t\t\t\t</div>*/}\r\n\t\t\t\t\t\t\t\t<YoutubeVideo videoId={vid} videoLid=\"\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n// 改用 <YouTube />\r\n/*export const linkToYouTube = () => {\r\n\t// 影片數量\r\n\tvar videos = document.querySelectorAll('.lazyLoad');\r\n\tfor (let i = 0; i < videos.length; i++) {\r\n\t\tlet video = videos[i];\r\n\t\tlet video_ID = video.dataset.id;\r\n\t\tlet video_LID = video.dataset.lid;\r\n\t\t// 建立 Iframe\r\n\t\tvideo.addEventListener('click', function() {\r\n\t\t\tvar iframe = document.createElement('iframe');\r\n\r\n\t\t\tiframe.setAttribute(\"class\", \"w-100\");\r\n\t\t\tif (video_LID === undefined) { // 單部影片\r\n\t\t\t\tiframe.setAttribute(\"src\", \"https://www.youtube.com/embed/\" + video_ID + \"?rel=0&showinfo=0&autoplay=1\");\r\n\t\t\t} else { // 播放清單\r\n\t\t\t\tiframe.setAttribute(\"src\", \"https://www.youtube.com/embed?listType=playlist&list=\" + video_LID + \"&rel=0&showinfo=0&autoplay=1\");\r\n\t\t\t}\r\n\t\t\tiframe.setAttribute(\"frameborder\", \"0\");\r\n\t\t\tiframe.setAttribute(\"allowfullscreen\", \"\");\r\n\t\t\t// 移除影片縮圖\r\n\t\t\twhile (this.firstChild) {\r\n\t\t\t\tthis.removeChild(this.lastChild); // 從最後移除比較快\r\n\t\t\t}\r\n\t\t\t// 換成 Iframe\r\n\t\t\tthis.appendChild(iframe);\r\n\t\t});\r\n\t}\r\n}*/\r\n","import './ScrollTopArrow.css';\r\n\r\nconst ScrollTopArrow = ({showScroll, scrollToElement}) => {\r\n\treturn (\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"scrollTop bi bi-arrow-up-circle-fill\" viewBox=\"0 0 16 16\" onClick={scrollToElement} style={{ display: (showScroll ? 'flex' : 'none') }}>\r\n\t\t\t<path d=\"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"/>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default ScrollTopArrow;\r\n","import { useState } from 'react';\r\n\r\nimport { DatePicker, Select } from 'react-rainbow-components';\r\n\r\nimport { getItems, itemsToRainbowOptions, vidsToVideoCards } from './../utils/ytVideos_dataExtraction';\r\nimport ScrollTopArrow from './../components/ScrollTopArrow';\r\nimport './YouTube.css';\r\n\r\nconst YouTube = ({scrollToElement}) => {\r\n\t// 篩選參數：日期\r\n\tconst [dateRange, setDateRange] = useState(new Date());\r\n\t// 篩選參數：地點\r\n\tconst locations = getItems('location'); // 所有不重複地點\r\n\tconst locationOptions = itemsToRainbowOptions(locations); // 建立地點選項\r\n\t// 篩選參數：鳥種\r\n\tconst birds = getItems('bird'); // 所有不重複鳥種\r\n\tconst birdOptions = itemsToRainbowOptions(birds); // 建立鳥種選項\r\n\t// 影片列表\r\n\tconst fullVids = getItems('vid', true, true); // 所有重複影片 ID\r\n\tconst fullDates = getItems('date', true, true); // 所有重複日期\r\n\tconst fullLocations = getItems('location', true, true); // 所有重複地點\r\n\tconst fullBirds = getItems('bird', true, true); // 所有重複鳥種\r\n\tconst videoCards = vidsToVideoCards(fullVids, fullDates, fullLocations, fullBirds); // 所有重複影片\r\n\t// 滾動至頂按鈕\r\n\tconst [showScroll, setShowScroll] = useState(false); // 顯示狀態\r\n\tconst handleScrollTop = target => { // 改變顯示狀態\r\n\t\tif (!showScroll && target.scrollTop > 500) { // 頁面捲動 500px 後，顯示按鈕\r\n\t\t\tsetShowScroll(true);\r\n\t\t} else if (showScroll && target.scrollTop <= 500) { // 頁面捲動接近頂端，隱藏按鈕\r\n\t\t\tsetShowScroll(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className=\"h-100\" onScroll={e => handleScrollTop(e.target)}>\r\n\t\t\t{/* 篩選參數區域 */}\r\n\t\t\t<div className=\"sortPanel w-100 d-inline-flex justify-content-evenly my-3 pb-3 sticky-top\">\r\n\t\t\t\t<div className=\"w-25\">\r\n\t\t\t\t\t{/* 日期選擇器 */}\r\n\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\tformatStyle=\"medium\" // 顯示於框格中的日期格式；small, medium, large\r\n\t\t\t\t\t\tlabel=\"日期\" // 標題\r\n\t\t\t\t\t\tlabelAlignment=\"left\" // 標題位置；left, center, right\r\n\t\t\t\t\t\thideLabel={false} // 標題顯示；boolean\r\n\t\t\t\t\t\tid=\"ytDatePicker\"\r\n\t\t\t\t\t\tisCentered={true} // 框格中的提示位置；boolean\r\n\t\t\t\t\t\tlocale=\"tw\" // 地區；預設為瀏覽器語言\r\n\t\t\t\t\t\tmaxDate={new Date(2040, 11, 25)} // 依照 YouTube 賞鳥紀錄最新影片日期\r\n\t\t\t\t\t\tminDate={new Date(2020, 10, 26)} // 第一部影片日期\r\n\t\t\t\t\t\tonChange={value => setDateRange(value)} // 更新日期狀態\r\n\t\t\t\t\t\tplaceholder=\"單一日期 或 日期區間\" // 框格中的提示內容\r\n\t\t\t\t\t\tselectionType=\"range\" // 日期模式；single, range\r\n\t\t\t\t\t\tvalue={dateRange} // 日期的值\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"w-25\">\r\n\t\t\t\t\t{/* 地點選單 */}\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tlabel=\"地點\"\r\n\t\t\t\t\t\tlabelAlignment=\"left\"\r\n\t\t\t\t\t\thideLabel={false}\r\n\t\t\t\t\t\tid=\"ytLocationSelect\"\r\n\t\t\t\t\t\toptions={locationOptions} // 地點選項\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"w-25\">\r\n\t\t\t\t\t{/* 鳥種選單 */}\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tlabel=\"鳥種\"\r\n\t\t\t\t\t\tlabelAlignment=\"left\"\r\n\t\t\t\t\t\thideLabel={false}\r\n\t\t\t\t\t\tid=\"ytBirdSelect\"\r\n\t\t\t\t\t\toptions={birdOptions} // 鳥種選項\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{/* 影片區域 */}\r\n\t\t\t{videoCards}\r\n\t\t\t{/* 滾動至頂按鈕 */}\r\n\t\t\t<ScrollTopArrow showScroll={showScroll} scrollToElement={() => scrollToElement(document.getElementById(\"ytVideosContainer\"))} />\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default YouTube;\r\n","const Photos = () => {\r\n\treturn (\r\n\t\t<main className=\"main main-no-content text-white\">\r\n\t\t\tWelcome to my photos!\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Photos;","const Records = () => {\r\n\treturn (\r\n\t\t<main className=\"main main-no-content text-white\">\r\n\t\t\tWelcome to my records!\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Records;","import {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute\r\n} from 'react-router-dom';\r\n\r\nimport Layout from './Layout';\r\n\r\nimport Home from './views/Home';\r\nimport EBird from './views/EBird';\r\nimport YouTube from './views/YouTube';\r\nimport Photos from './views/Photos';\r\nimport Records from './views/Records';\r\n\r\nconst RootRouter = () => {\r\n\t// 頁面滾動至某元素\r\n\tconst scrollToElement = target => {\r\n\t\ttarget.scrollIntoView({ behavior: 'smooth' }); // 平滑地滾動到可見\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Layout> {/* 所有頁面的模板 */}\r\n\t\t\t\t<Switch> {/* 匹配路徑載入對應分頁元件 */}\r\n\t\t\t\t\t<Route exact path=\"/bird-watching\" component={Home} />\r\n\t\t\t\t\t<Route exact path=\"/bird-watching/ebird\" component={EBird} />\r\n\t\t\t\t\t<Route exact path=\"/bird-watching/youtube\" component={() => \r\n\t\t\t\t\t\t<YouTube scrollToElement={scrollToElement} />\r\n\t\t\t\t\t} />\r\n\t\t\t\t\t<Route exact path=\"/bird-watching/photos\" component={Photos} />\r\n\t\t\t\t\t<Route exact path=\"/bird-watching/records\" component={Records} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Layout>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default RootRouter;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport RootRouter from './router';\n\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootRouter /> {/* 轉換頁面分流器 */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}